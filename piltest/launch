#!/bin/bash

. ./pythonenv.sh
# Use ipython if available
python=python
which ipython &> /dev/null && python=ipython


# Run with python -i to get an interactive shell after the commands below are run
$python -i -c '
import dask, distributed
from distributed import Client
from distributed.deploy.adaptive import Adaptive
from dask_condor import HTCondorCluster
import logging, os

logging.basicConfig(level=0)
logging.getLogger("distributed.comm.tcp").setLevel(logging.ERROR)
logging.getLogger("distributed.deploy.adaptive").setLevel(logging.WARNING)

# We need the tarball with PIL
worker_tarball="dask_condor_worker_with_pil.SL6.tar.gz"

# If the tarball's already been downloaded, use that; otherwise, get it remotely.
if not os.path.exists(worker_tarball):
    worker_tarball = "http://research.cs.wisc.edu/~matyas/dask_condor/" + worker_tarball

htc = HTCondorCluster(worker_tarball=worker_tarball,
                      transfer_files="calcov.py",  # extra file to transfer
                      logdir=".log",  # save logs in a separate dir to avoid cluttering up the current one
                      )
cli = Client(htc)
sch = htc.scheduler
print("htc={0}\ncli={1}\nsch={2}".format(htc,cli,sch))
print("To create an adaptive, do\n"
      "\tadapt = Adaptive(sch, htc, interval=20000, startup_cost=60)")
'
